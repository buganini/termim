#!/usr/bin/env python

import os
import sys
import ibus

CTRL_SPACE = chr(200)
CTRL_SHIFT = chr(201)
LEFT = chr(202)
RIGHT = chr(203)
SPACE = chr(204)
UP = chr(205)
DOWN = chr(206)
CTRL_LEFT = chr(207)
CTRL_RIGHT = chr(208)

try:
    ime = ibus.Bus()
except:
    if not start_ibus_daemon:
        print '(error "ibus-daemon is not running")'
        exit(1)
    print "Launch IBus daemon..."
    import time
    if os.spawnlp(os.P_WAIT, "ibus-daemon", "ibus-daemon", "-ds") == 0:
        for i in range(10):
            time.sleep(0.5)
            try:
                ime = ibus.Bus()
                break
            except:
                pass
        else:
            sys.stderr.write('Failed connecting to ibus-daemon\n')
            exit(1)
    else:
        sys.stderr.write('Failed launching ibus-daemon\n')
        exit(1)

out=int(os.sys.argv[1])

im_active=0
im_n=1

print "\033[44m"

ime_context = ime.create_input_context('termim')

while 1:
	inp=os.read(sys.stdin.fileno(), 512)
	if(inp==UP):
		os.write(out,'UP')
	elif(inp==CTRL_SPACE):
		if im_active:
			im_active=0
		else:
			im_active=1
		os.write(out,ime.list_active_engines()[im_n].name)
	elif(inp==CTRL_SHIFT or inp==CTRL_RIGHT):
		im_n+=1
		im_n%=len(ime.list_active_engines())
		ime_context.set_engine(ime.list_active_engines()[im_n])
		os.write(out,ime.list_active_engines()[im_n].name)
	elif(inp==CTRL_LEFT):
		im_n-=1
		im_n+=len(ime.list_active_engines())
		im_n%=len(ime.list_active_engines())
		ime_context.set_engine(ime.list_active_engines()[im_n])
		os.write(out,ime.list_active_engines()[im_n].name)
	else:
		for c in inp:
			ime_context.process_key_event(c, keycode, modmask)
			os.write(out, c)

